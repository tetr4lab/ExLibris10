@page "/"

@inject ExLibrisDataSet DataSet

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>
<p>@(StartTime.ToLongTimeString ()) ~ @(EndTime.ToLongTimeString ()) @(EndTime - StartTime)</p>
<p>Welcome to your new app.</p>

@if (DataSet.Initialized) {
    <div class="card hstack p-2"><div>書籍</div><div class="ms-auto">@($"{DataSet.Books.Count:#,#}")冊</div></div>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Authors</th>
                <th>PublishDate</th>
                <th>Publisher</th>
                <th>Series</th>
                <th>Price</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in DataSet.Books) {
                <tr>
                    <td class="text-end">@book.Id</td>
                    <td>@book.Title</td>
                    <td>@(string.Join (", ", book.Authors.ConvertAll (i => i.Name)))</td>
                    <td>@(book.PublishDate?.ToShortDateString ())</td>
                    <td>@book.Publisher</td>
                    <td>@book.Series</td>
                    <td class="text-end">¥@($"{book.Price:#,#}")</td>
                    <td>@book.Description</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="card hstack p-2"><div>著者</div><div class="ms-auto">@($"{DataSet.Authors.Count:#,#}")人</div></div>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>-</th>
                <th>Books</th>
                <th>Descripthion</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var author in DataSet.Authors) {
                <tr>
                    <td class="text-end">@author.Id</td>
                    <td>@author.Name</td>
                    <td>@author.AdditionalName</td>
                    <td>@(string.Join (", ", author.Books.ConvertAll (i => i.Title)))</td>
                    <td>@author.Description</td>
                </tr>
            }
        </tbody>
    </table>
} else {
    <p>loading...</p>
}

@code {

    protected DateTime StartTime { get; set; }
    protected DateTime EndTime { get; set; }

    protected override async Task OnInitializedAsync () {
        await base.OnInitializedAsync ();
        StartTime = DateTime.Now;
        _ = DataSet.Initialize ();
    }

    protected override async Task OnAfterRenderAsync (bool firstRender) {
        await base.OnAfterRenderAsync (firstRender);
        if (firstRender) {
            while (!DataSet.Initialized) {
                await Task.Delay (1000 / 60);
            }
            EndTime = DateTime.Now;
            StateHasChanged ();
        }
    }

}

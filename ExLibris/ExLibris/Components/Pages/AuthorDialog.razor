@inherits ItemDialogBase<Author, Book>

<MudDialog>
    <DialogContent>
        <MudSimpleTable Dense Striped Breakpoint="Breakpoint.Xs">
            <tbody>
                <tr>
                    <th class="align-end">@Author.Label[nameof(Item.Id)]:</th>
                    <td class="align-end">@(Item.Id > 0 ? Item.Id : "新規追加")</td>
                </tr>
                <tr>
                    <th class="align-end">@Author.Label[nameof(Item.Name)]:</th>
                    <td>
                        @if (OnEdit) {
                            <MudGrid Spacing="0">
                                <MudItem xs="6">
                                    <MudTextField @bind-Value="Item.Name" Label="Name" Variant="Variant.Text" FullWidth Required @ref="FocusTarget" />
                                </MudItem>
                                <MudItem xs="6">
                                    <MudTextField @bind-Value="Item.AdditionalName" Label="AdditionalName" Variant="Variant.Text" FullWidth />
                                </MudItem>
                                @if (IsError) {
                                    <MudItem xs="12">
                                        <MudAlert Severity="Severity.Error" Variant="Variant.Outlined" Dense="true" Class="my-1">@ErrorReport</MudAlert>
                                    </MudItem>
                                }
                            </MudGrid>
                        } else {
                            <span>@Item.Name</span>
                            @if (!string.IsNullOrEmpty(Item.AdditionalName)) {
                                <span>&nbsp;/&nbsp;@Item.AdditionalName</span>
                            }
                        }
                    </td>
                </tr>
                <tr>
                    <th class="align-end">@Author.Label[nameof(Item.Description)]:</th>
                    <td>
                        @if (OnEdit) {
                            <MudTextField @bind-Value="Item.Description" Label="Description" Variant="Variant.Text" FullWidth Lines="5" />
                        } else {
                            <MudText Style="white-space: pre-wrap;">@Item.Description</MudText>
                        }
                    </td>
                </tr>
                <tr>
                    <th class="align-end">@Author.Label[nameof(Item.Books)]:</th>
                    <td>
                        @if (OnEdit) {
                            <MudButton OnClick="OnEditRelatedItems" StartIcon="@Icons.Material.Filled.Edit"><MudText Typo="Typo.body1">@(string.Join (", ", Item.Books.OrderBy (a => a.Id).ToList ().ConvertAll (a => a.Title)))</MudText></MudButton>
                        } else {
                            <MudGrid Spacing="0">
                                @foreach (var book in Item.Books.OrderByDescending (b => b.PublishDate).OrderBy (b => b.Id).ToList ()) {
                                    <MudItem xs="12">
                                        <MudButton StartIcon="@Icons.Material.Filled.Book" OnClick="() => ChangeDialog (book)" Class="pa-0 ma-0 align-left" Variant="Variant.Text"><MudText Class="ma-0">@book.Title</MudText></MudButton>
                                    </MudItem>
                                }
                            </MudGrid>
                        }
                    </td>
                </tr>
            </tbody>
        </MudSimpleTable>
    </DialogContent>
    <DialogActions>
        @if (OnEdit) {
            <MudButton OnClick="CancelEdit" StartIcon="@Icons.Material.Filled.Cancel" Size="Size.Large">Cancel</MudButton>
            <MudButton OnClick="SaveAsync" Disabled="@(IsError || !Updated || isSaving)" StartIcon="@Icons.Material.Filled.Save" Size="Size.Large" Color="Color.Success">Save</MudButton>
        } else {
            @if (!IsNewItem) {
                <MudTooltip Text="著者を削除" Duration="1000">
                    <MudFab Size="Size.Small" StartIcon="@Icons.Material.Filled.DeleteForever" OnClick="Delete" />
                </MudTooltip>
                <MudDivider Class="mx-5" Vertical FlexItem />
                <MudSpacer />
            }
            <MudTooltip Text="著者を編集" Duration="1000">
                <MudFab Size="Size.Small" StartIcon="@Icons.Material.Filled.Edit" OnClick="StartEdit" />
            </MudTooltip>
        }
    </DialogActions>
</MudDialog>

@code {

    /// <summary>項目一覧</summary>
    protected List<Author> authors => DataSet.Authors!;

    /// <summary>エラー</summary>
    protected bool IsError => !string.IsNullOrEmpty (ErrorReport);

    /// <summary>エラー報告</summary>
    protected string ErrorReport {
        get {
            if (authors.Any (a => a.Id != Item.Id && a.Name == Item.Name && a.AdditionalName == Item.AdditionalName)) {
                return "同じ名前が存在します。";
            } else {
                return string.Empty;
            }
        }
    }

    /// <summary>セーブして編集を終了</summary>
    protected new void SaveAsync () {
        if (IsError) {
            Snackbar.Add ("保存するためにはエラーの解消が必要です。");
        } else {
            base.SaveAsync();
        }
    }

}
